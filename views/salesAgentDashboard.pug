doctype html
html
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title Sales Agent Dashboard
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css')
    link(rel='stylesheet', href='/css/sales.css')
  body
    // Top Navbar
    nav.navbar.navbar-expand-lg.navbar-dark()
      .container-fluid
        a.navbar-brand(href='/') KGL System
        button.navbar-toggler(type='button', data-bs-toggle='collapse', data-bs-target='#navbarNav')
          span.navbar-toggler-icon
        #navbarNav.collapse.navbar-collapse
          ul.navbar-nav.ms-auto
            //- li.nav-item
            //-   a.nav-link(href='/') Home
            li.nav-item
              a.nav-link(href='/creditSaleList') Credits
            li.nav-item
              a.nav-link(href='/procurementList') Procurement
            li.nav-item
              a.nav-link(href='/sell/saleslist') Sales
            li.nav-item
              a.nav-link(href='/signupList') Users
            li.nav-item
              a.nav-link(href='/index') Logout

    .container-fluid
      .row
        // Sidebar
        .col-md-2.sidebar
          ul.nav.flex-column
            if user
              li.nav-item
                a.nav-link(href=user.role === 'director' ? '/dashboard' : user.role === 'manager' ? '/manager-dashboard' : '/salesAgentDashboard') Dashboard
            li.nav-item
              a.nav-link(href='/add') Add Credit
            li.nav-item
              a.nav-link(href='/procure') Add Procurement
            li.nav-item
              a.nav-link(href='/sell') Add Sale
            li.nav-item
              a.nav-link(href='/signup') Add User
            //- li.nav-item
            //-   a.nav-link(href='/about') About

        // Main Content
        .col-md-10.main-content
          .container.mt-4
            h2.mb-4 Sales Agent Dashboard
            // Flex Cards
            .d-flex.gap-4.mb-4.flex-wrap
              .card.shadow.flex-fill(style='min-width:220px;max-width:320px;background:#f8f9fa;')
                .card-body.text-center
                  h5.card-title.text-primary.mb-3 Total Sales
                  h2.mb-0#totalSales 0
              .card.shadow.flex-fill(style='min-width:220px;max-width:320px;background:#f8f9fa;')
                .card-body.text-center
                  h5.card-title.text-success.mb-3 Total Credit Due
                  h2.mb-0#totalCredit 0
              .card.shadow.flex-fill(style='min-width:220px;max-width:320px;background:#f8f9fa;')
                .card-body.text-center
                  h5.card-title.text-warning.mb-3 Total Tonnage Sold
                  h2.mb-0#totalTonnage 0
            // Recent Sales Table
            .card.shadow
              .card-body
                h4.mb-3 Recent Sales
                table.table.table-striped#recentSalesTable
                  thead
                    tr
                      th Produce Name
                      th Tonnage (kg)
                      th Amount Paid (UGX)
                      th Buyer Name
                      th Date
                      th Time
                  tbody
                    // Will be populated by JavaScript

    // Footer
    footer.footer.mt-5.py-3.bg-light.text-center
      p.mb-0 &copy; 2024 KGL System. All rights reserved.

    script.
      // Fetch dashboard data when page loads
      document.addEventListener('DOMContentLoaded', async () => {
        try {
          const response = await fetch('/sell/agent-dashboard');
          const data = await response.json();
          
          if (response.ok) {
            // Update totals
            document.getElementById('totalSales').textContent = data.totalPayment.toLocaleString();
            document.getElementById('totalTonnage').textContent = data.totalTonnage.toLocaleString();
            
            // Update recent sales table
            const tbody = document.querySelector('#recentSalesTable tbody');
            tbody.innerHTML = '';
            
            data.recentSales.forEach(sale => {
              const row = document.createElement('tr');
              row.innerHTML = `
                <td>${sale.produceName}</td>
                <td>${sale.tonnage}</td>
                <td>${sale.amountPaid.toLocaleString()}</td>
                <td>${sale.buyerName}</td>
                <td>${new Date(sale.date).toLocaleDateString()}</td>
                <td>${sale.time}</td>
              `;
              tbody.appendChild(row);
            });
          } else {
            console.error('Failed to load dashboard data:', data.error);
          }
        } catch (error) {
          console.error('Error loading dashboard data:', error);
        }
      });
