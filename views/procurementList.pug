doctype html
html
  head
    title Procurement List
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css')
    link(rel='stylesheet', href='/css/sales.css')
  body
    // Top Navbar
    nav.navbar.navbar-expand-lg.navbar-dark()
      .container-fluid
        a.navbar-brand(href='/') KGL System
        button.navbar-toggler(type='button', data-bs-toggle='collapse', data-bs-target='#navbarNav')
          span.navbar-toggler-icon
        #navbarNav.collapse.navbar-collapse
          ul.navbar-nav.ms-auto
            //- li.nav-item
            //-   a.nav-link(href='/') Home
            li.nav-item
              a.nav-link(href='/creditSaleList') Credits
            li.nav-item
              a.nav-link(href='/procurementList') Procurement
            li.nav-item
              a.nav-link(href='/sell/saleslist') Sales
            li.nav-item
              a.nav-link(href='/signupList') Users
            li.nav-item
              a.nav-link(href='/index') Logout

    .container-fluid
      .row
        // Sidebar
        .col-md-2.sidebar
          ul.nav.flex-column
            if user
              li.nav-item
                a.nav-link(href=user.role === 'director' ? '/dashboard' : user.role === 'manager' ? '/manager-dashboard' : '/sales-manager-dashboard') Dashboard
            li.nav-item
              a.nav-link(href='/add') Add Credit
            li.nav-item
              a.nav-link(href='/procure') Add Procurement
            li.nav-item
              a.nav-link(href='/sell') Add Sale
            li.nav-item
              a.nav-link(href='/signup') Add User
            //- li.nav-item
            //-   a.nav-link(href='/about') About

        // Main Content
        .col-md-10.main-content
          .container.mt-4
            h2.mb-4 Procurement List
            if error
              .alert.alert-danger= error
            if success
              .alert.alert-success= success
            .card.shadow
              .card-body
                if procurements && procurements.length > 0
                  table.table.table-striped
                    thead
                      tr
                        th Produce Name
                        th Type
                        th Date
                        th Time
                        th Tonnage (kg)
                        th Cost (UGX)
                        th Dealer Name
                        th Branch
                        th Contact
                        th Selling Price (UGX)
                        th Actions
                    tbody
                      each item in procurements
                        tr
                          td= item.produceName
                          td= item.produceType
                          td= item.date ? new Date(item.date).toLocaleDateString() : ''
                          td= item.time
                          td= item.tonnage
                          td= (item.cost ? item.cost.toLocaleString() : 'N/A')
                          td= item.dealerName
                          td= item.branch
                          td= item.contact
                          td= (item.sellingPrice || 0).toLocaleString()
                          td
                            .btn-group
                              button.btn.btn-sm.btn-primary(onclick=`editProcurement('${item._id}')`) Edit
                              button.btn.btn-sm.btn-danger(onclick=`deleteProcurement('${item._id}')`) Delete
                else
                  p.text-center No procurement records found.

    // Delete Confirmation Modal
    #deleteModal.modal.fade(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Confirm Delete
            button.btn-close(type='button', data-bs-dismiss='modal')
          .modal-body
            p Are you sure you want to delete this procurement record?
          .modal-footer
            button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
            button#confirmDelete.btn.btn-danger(type='button') Delete

    // Edit Procurement Modal
    #editModal.modal.fade(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Edit Procurement
            button.btn-close(type='button', data-bs-dismiss='modal')
          .modal-body
            form#editProcurementForm
              input#procurementId(type='hidden')
              .mb-3
                label.form-label(for='editProduceName') Produce Name
                input#editProduceName.form-control(type='text', required)
              .mb-3
                label.form-label(for='editProduceType') Produce Type
                input#editProduceType.form-control(type='text', required)
              .mb-3
                label.form-label(for='editDate') Date
                input#editDate.form-control(type='date', required)
              .mb-3
                label.form-label(for='editTime') Time
                input#editTime.form-control(type='time', required)
              .mb-3
                label.form-label(for='editTonnage') Tonnage (kg)
                input#editTonnage.form-control(type='number', step='0.01', required)
              .mb-3
                label.form-label(for='editCost') Cost (UGX)
                input#editCost.form-control(type='number', required)
              .mb-3
                label.form-label(for='editDealerName') Dealer Name
                input#editDealerName.form-control(type='text', required)
              .mb-3
                label.form-label(for='editBranch') Branch
                input#editBranch.form-control(type='text', required)
              .mb-3
                label.form-label(for='editContact') Contact
                input#editContact.form-control(type='text', required)
              .mb-3
                label.form-label(for='editSellingPrice') Selling Price (UGX)
                input#editSellingPrice.form-control(type='number', required)
          .modal-footer
            button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
            button#saveEdit.btn.btn-primary(type='button') Save Changes

    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js')
    script.
      let deleteModal;
      let editModal;
      let procurementToDelete = null;

      document.addEventListener('DOMContentLoaded', () => {
        deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        editModal = new bootstrap.Modal(document.getElementById('editModal'));
      });

      async function deleteProcurement(id) {
        procurementToDelete = id;
        deleteModal.show();
      }

      document.getElementById('confirmDelete').addEventListener('click', async () => {
        if (!procurementToDelete) return;
        
        try {
          const response = await fetch(`/procurement/${procurementToDelete}`, {
            method: 'DELETE'
          });
          
          if (response.ok) {
            window.location.reload();
          } else {
            const data = await response.json();
            alert(data.error || 'Failed to delete procurement record');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Failed to delete procurement record');
        }
        
        deleteModal.hide();
        procurementToDelete = null;
      });

      async function editProcurement(id) {
        try {
          const response = await fetch(`/procurement/${id}`);
          const procurement = await response.json();
          
          if (response.ok) {
            document.getElementById('procurementId').value = procurement._id;
            document.getElementById('editProduceName').value = procurement.produceName;
            document.getElementById('editProduceType').value = procurement.produceType;
            document.getElementById('editDate').value = new Date(procurement.date).toISOString().split('T')[0];
            document.getElementById('editTime').value = procurement.time;
            document.getElementById('editTonnage').value = procurement.tonnage;
            document.getElementById('editCost').value = procurement.cost;
            document.getElementById('editDealerName').value = procurement.dealerName;
            document.getElementById('editBranch').value = procurement.branch;
            document.getElementById('editContact').value = procurement.contact;
            document.getElementById('editSellingPrice').value = procurement.sellingPrice;
            
            editModal.show();
          } else {
            alert('Failed to load procurement details');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Failed to load procurement details');
        }
      }

      document.getElementById('saveEdit').addEventListener('click', async () => {
        const form = document.getElementById('editProcurementForm');
        const formData = new FormData(form);
        const procurementId = document.getElementById('procurementId').value;
        
        try {
          const response = await fetch(`/procurement/${procurementId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              produceName: formData.get('editProduceName'),
              produceType: formData.get('editProduceType'),
              date: formData.get('editDate'),
              time: formData.get('editTime'),
              tonnage: formData.get('editTonnage'),
              cost: formData.get('editCost'),
              dealerName: formData.get('editDealerName'),
              branch: formData.get('editBranch'),
              contact: formData.get('editContact'),
              sellingPrice: formData.get('editSellingPrice')
            })
          });
          
          if (response.ok) {
            window.location.reload();
          } else {
            const data = await response.json();
            alert(data.error || 'Failed to update procurement record');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Failed to update procurement record');
        }
        
        editModal.hide();
      });
